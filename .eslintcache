[{"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\index.js":"1","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\App.js":"2","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\Products.js":"3","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\About\\About.js":"4","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\WeeklySchedule\\WeeklySchedule.js":"5","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\config.js":"6","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\ApiContext.js":"7","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\AddProducts.js":"8","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\WeekDayCheckbox.js":"9","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\LandingPage\\LandingPage.js":"10"},{"size":265,"mtime":1611604182531,"results":"11","hashOfConfig":"12"},{"size":3085,"mtime":1611855183253,"results":"13","hashOfConfig":"12"},{"size":1441,"mtime":1611692563310,"results":"14","hashOfConfig":"12"},{"size":1621,"mtime":1611729480926,"results":"15","hashOfConfig":"12"},{"size":2556,"mtime":1611950880689,"results":"16","hashOfConfig":"12"},{"size":89,"mtime":1611632320983,"results":"17","hashOfConfig":"12"},{"size":229,"mtime":1611606410838,"results":"18","hashOfConfig":"12"},{"size":7364,"mtime":1611855652606,"results":"19","hashOfConfig":"12"},{"size":432,"mtime":1611782830014,"results":"20","hashOfConfig":"12"},{"size":817,"mtime":1611946938187,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z0hla8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\index.js",[],["46","47"],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\App.js",[],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\Products.js",["48"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiContext from '../ApiContext';\r\nimport './Products.css';\r\n\r\nclass Products extends React.Component {\r\n  static defaultProps = {\r\n    // onDeleteProduct: () => {},\r\n  };\r\n\r\n  static contextType = ApiContext;\r\n\r\n  // handleDeleteProduct = (productId) => {\r\n  //   this.props.history.push('products');\r\n  // };\r\n\r\n  getProductName = () => {\r\n    let currentProduct = this.context.products.find(\r\n      (product) => product.id === this.props.product_id\r\n    );\r\n    console.log(currentProduct);\r\n    return currentProduct.product_name;\r\n  };\r\n\r\n  renderProductsList = () => {\r\n    // Do the map to create all Li tags, then inject that into productsList\r\n    let products = this.context.products.map((product, i) => (\r\n      <li key={i}>\r\n        {product.product_name}\r\n      </li>\r\n    ));\r\n    let productsList = <ol className='ol-product-list'>{products}</ol>;\r\n    return productsList;\r\n  };\r\n\r\n  render() {\r\n    const { products = [] } = this.context;\r\n    // console.log(products, 'This is in product.js');\r\n    return (\r\n      <main>\r\n          <h2>Happy Skin Products</h2>\r\n          <Link to='/add-product'\r\n          className='add-product-button'>Add Product\r\n          </Link>\r\n         \r\n        <section className='favorites-style'>\r\n          {this.renderProductsList()}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\About\\About.js",["49"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './About.css';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h2>About Happy Skin Planner</h2>\r\n        <fieldset className='about-style'>\r\n          <p>\r\n            Happy Skin Planner was created in order to assist people who wanted\r\n            to take charge of maintaining and prioritizing their skin. It was\r\n            created with love and is intended to assist you in planning out your\r\n            weekly skin care routine.\r\n          </p>\r\n\r\n          <p>\r\n            With Happy Skin Planner you can decide what products you want to use\r\n            by adding them into your Happy Skin Products page. When adding a new\r\n            skin product, you can choose what specific days to use the products\r\n            and also customize whether you wish to add it to your Morning or\r\n            Evening routine. This will create a customized weekly planner for\r\n            you to view on the \"My Weekly Planner\" tab and allows you to check\r\n            them off as you complete your skin regime throughout the day. If you\r\n            no longer wish to use a specific product, you may also remove the\r\n            product from your planner. Happy Skin Planner is entirely\r\n            customizable for your use in order to provide your skin the love it\r\n            needs to leave it ever so happy!\r\n          </p>\r\n\r\n          <p>\r\n            Happy Skin Planning! <br />\r\n            XoXo\r\n          </p>\r\n        </fieldset>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\WeeklySchedule\\WeeklySchedule.js",[],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\config.js",[],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\ApiContext.js",[],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\AddProducts.js",["50"],"import React from 'react';\r\nimport ApiContext from '../ApiContext';\r\nimport config from '../config';\r\nimport './Products.css';\r\nimport noBoxesChecked from './WeekDayCheckbox';\r\n\r\nclass AddProduct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productName: '',\r\n      morningOrEvening: true,\r\n      dayOfWeek: {\r\n        monday: false,\r\n        tuesday: false,\r\n        wednesday: false,\r\n        thursday: false,\r\n        friday: false,\r\n        saturday: false,\r\n        sunday: false,\r\n      },\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  static contextType = ApiContext;\r\n\r\n  // This function handles changes in state for text input\r\n  handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // This function handles changes in state for morning or evening\r\n  handleMorningChange = (event) => {\r\n    const mornOrEven = event.target.value;\r\n    // console.log(mornOrEven)\r\n    this.setState({\r\n      morningOrEvening: mornOrEven === 'morning',\r\n    });\r\n  };\r\n\r\n  // This function handles changes in state for checkbox input\r\n  handleDayOfWeekChange = (event) => {\r\n    const dayOfWeek = event.target.value;\r\n    this.setState({\r\n      dayOfWeek: {\r\n        ...this.state.dayOfWeek,\r\n        [dayOfWeek]: !this.state.dayOfWeek[dayOfWeek],\r\n      },\r\n    });\r\n  };\r\n\r\n  // On this submit button, perform post request\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const pName = this.state.productName;\r\n    const mOrE = this.state.morningOrEvening;\r\n    const dOfWeek = this.state.dayOfWeek; //needs to be changed to handle a checkbox\r\n\r\n    let filteredDays = {};\r\n    // iterating over keys of an object (let key in dOfWeek)\r\n    for (let key in dOfWeek) {\r\n      //if value of day is true,then add day to filteredDays. If false, not added to object\r\n      if (dOfWeek[key]) {\r\n        filteredDays[key] = dOfWeek[key];\r\n      }\r\n    }\r\n\r\n    // console.log(filteredDays)      test checks to see if only days set to true are stored\r\n    if (noBoxesChecked()) {\r\n      alert('Please, check at least one checkbox!');\r\n    } else {\r\n      // Perform fetch request and error handling\r\n      fetch(`${config.url}/products`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          product_name: pName,\r\n          morning: mOrE === 'morning',\r\n          days: filteredDays,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw new Error('Something went wrong, could not add new product.');\r\n          }\r\n\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          this.context.addProduct(data);\r\n          this.props.history.goBack();\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const dayOfWeek = this.state.dayOfWeek;\r\n    return (\r\n      <div>\r\n        <form\r\n          className='add-product-form'\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n        >\r\n          <h2>Add New Skin Product</h2>\r\n          <fieldset className='add-product-style'>\r\n            <label htmlFor='name'>Product Name: </label>\r\n            <input\r\n              type='text'\r\n              name='productName'\r\n              value={this.state.productName}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              id='morning'\r\n              type='radio'\r\n              name='morningOrEvening'\r\n              value='morning'\r\n              checked={this.state.morningOrEvening.morning}\r\n              onChange={this.handleMorningChange}\r\n              defaultChecked\r\n            />\r\n            <label htmlFor='morning'>Morning</label>\r\n            <br />\r\n            <input\r\n              id='evening'\r\n              type='radio'\r\n              name='morningOrEvening'\r\n              value='evening'\r\n              checked={this.state.morningOrEvening.evening}\r\n              onChange={this.handleMorningChange}\r\n            />\r\n            <label htmlFor='evening'>Evening</label>\r\n            <br />\r\n\r\n            <div>\r\n              <p>Check Days To Use Product</p>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='monday'\r\n                  name='dayOfWeek'\r\n                  value='monday'\r\n                  checked={this.state.dayOfWeek.monday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='monday'>Monday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='tuesday'\r\n                  name='dayOfWeek'\r\n                  value='tuesday'\r\n                  checked={this.state.dayOfWeek.tuesday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='tuesday'>Tuesday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='wednesday'\r\n                  name='dayOfWeek'\r\n                  value='wednesday'\r\n                  checked={this.state.dayOfWeek.wednesday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='wednesday'>Wednesday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='thursday'\r\n                  name='dayOfWeek'\r\n                  value='thursday'\r\n                  checked={this.state.dayOfWeek.thursday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='thursday'>Thursday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='friday'\r\n                  name='dayOfWeek'\r\n                  value='friday'\r\n                  checked={this.state.dayOfWeek.friday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='friday'>Friday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='saturday'\r\n                  name='dayOfWeek'\r\n                  value='saturday'\r\n                  checked={this.state.dayOfWeek.saturday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='saturday'>Saturday</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type='checkbox'\r\n                  id='sunday'\r\n                  name='dayOfWeek'\r\n                  value='sunday'\r\n                  checked={this.state.dayOfWeek.sunday}\r\n                  onChange={this.handleDayOfWeekChange}\r\n                />\r\n                <label htmlFor='sunday'>Sunday</label>\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <div className='form-submit-button'>\r\n              <button type='submit'>Submit</button>\r\n            </div>\r\n\r\n            <button onClick={() => this.props.history.goBack()}>Cancel</button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProduct;\r\n","C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\Products\\WeekDayCheckbox.js",[],"C:\\Thinkful\\Capstone-projects\\first-capstone-project\\happy-skin-planner-client\\src\\LandingPage\\LandingPage.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":37,"column":13,"nodeType":"57","messageId":"58","endLine":37,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":101,"column":11,"nodeType":"57","messageId":"58","endLine":101,"endColumn":20},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'dayOfWeek' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]